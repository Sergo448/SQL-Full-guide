# -*- coding: utf-8 -*-
# Sergey.6362@mail.ru


import re
import sqlite3

# создаем подключение к нашей базе данных
conn = sqlite3.connect('./DATA_SQL/DATA_BOOK_A')

# Создаем курсор - это специальный объект который делает запросы и получает их результаты
cursor = conn.cursor()

# ТУТ БУДЕТ НАШ КОД РАБОТЫ С БАЗОЙ ДАННЫХ

# Перечислить все заказы, включая номер и стоимость заказа, а также имя и лимит
# кредита клиента, сделавшего заказ.
"""
            Типы агрегирующих функций:
            AVG() - принимает столбец и возвращает среднее значение для столбца (пр. quiery_1)
            SUM() - принимает столбец и возвращает сумму значений столбца (пр. quiery_3)
            MIN() - принимает столбец и возвращает минимальное значение для столбца (пр. quiery_1)
            MAX() - принимает столбец и возвращает максимальное значение для столбца (пр. quiery_1)
            COUNT() - принимает столбец и возвращает количество значенией для столбца (пр. quiery_1)
            COUNT(*) - подсчитывает количество строк в таблице результатов запроса (пр. quiery_1)
            
            
"""
quiery_1 = "SELECT AVG(QUOTA), AVG(SALES) FROM SALESREPS"
quiery_2 = "SELECT AVG(100 * (SALES / QUOTA)) FROM SALESREPS;"

quiery_3 = "SELECT SUM(QUOTA), SUM(SALES) FROM SALESREPS"
quiery_4 = "SELECT SUM(AMOUNT) FROM ORDERS, SALESREPS WHERE NAME = 'Bill Adams' AND REP = EMPL_NUM;"


# Делаем запрос к базе данных, используя обычный SQL-синтаксис
# cursor.execute(quiery_13)
cursor.execute(quiery_4)

# !------------------!------------------!------------------!------------------!------------------!
# Если мы не просто читаем, но и вносим изменения в базу данных - необходимо сохранить транзакцию
# conn.commit()
# !------------------!------------------!------------------!------------------!------------------!

results = cursor.fetchall()
print('SQL quiery result:')
print('-----------------')
for s in results:
    print(s)
print('-----------------')
# Не забываем закрыть соединение с базой данных
conn.close()
