-- CREATE VIEW EASTOFFICES AS SELECT * FROM OFFICES WHERE REGION = 'Eastern';
-- CREATE VIEW SUEORDERS AS SELECT * FROM ORDERS WHERE CUST IN (SELECT CUST_NUM FROM CUSTOMERS WHERE CUST_REP = 102);
-- CREATE VIEW BIGCUSTOMERS AS SELECT * FROM CUSTOMERS WHERE 3000.00 < (SELECT SUM(AMOUNT) FROM ORDERS WHERE CUST = CUST_NUM);

-- Vertical VIEWS

-- CREATE VIEW REPINFO AS SELECT EMPL_NUM, NAME, REP_OFFICE FROM SALESREPS;
-- CREATE VIEW OFFICEINFO AS SELECT OFFICE, CITY, REGION FROM OFFICES;
-- CREATE VIEW CUSTINFO AS SELECT COMPANY, CUST_REP FROM CUSTOMERS;

--СМЕШАННЫЕ VIEWS

-- CREATE VIEW BILLCUST AS SELECT CUST_NUM, COMPANY, CREDIT_LIMIT FROM CUSTOMERS WHERE CUST_REP = 105;

-- Сгруппированные представления
-- CREATE VIEW ORD_BY_REP (WHO, HOW_MANY, TOTAL_, LOW, HIGH, AVERAGE)
	-- AS 
	-- SELECT REP, COUNT(*), SUM(AMOUNT), MIN(AMOUNT), MAX(AMOUNT), AVG(AMOUNT)
		-- FROM ORDERS
			-- GROUP BY REP;
			
-- Соединенные представления
--CREATE VIEW ORDER_INFO (ORDER_NUM, COMPANY, REP_NAME, AMOUNT) AS
--	SELECT ORDER_NUM, COMPANY, NAME, AMOUNT
--		FROM ORDERS, CUSTOMERS, SALESREPS
--			WHERE CUST = CUST_NUM
--			AND REP = EMPL_NUM;

-- Обращение к предыдущему соединенному представлению
--SELECT REP_NAME, COMPANY, SUM(AMOUNT) FROM ORDER_INFO GROUP BY REP_NAME, COMPANY;
--SELECT COMPANY, AMOUNT, REP_NAME FROM ORDER_INFO WHERE AMOUNT > 20000.00 ORDER BY AMOUNT DESC;
-- DESC () сортирует в порядке убывания, необязательный аргумент

--SELECT * FROM EASTREPS;
--CREATE VIEW EASTREPS_EAST AS SELECT * FROM SALESREPS WHERE REP_OFFICE IN (11, 12, 13);
--SELECT * FROM EASTREPS_EAST;

--CREATE VIEW ORD_BY_REP_NEW (WHO, HOW_MANY, TOTAL, LOW, HIGH, AVERAGE) AS 
--	SELECT REP, COUNT(*), SUM(AMOUNT), MIN(AMOUNT), MAX(AMOUNT), AVG(AMOUNT) 
--		FROM ORDERS
--			GROUP BY REP;
-- SELECT * FROM ORD_BY_REP_NEW;

