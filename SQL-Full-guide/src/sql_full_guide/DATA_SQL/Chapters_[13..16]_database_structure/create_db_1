-- SELECT, INSERT, DELETE, UPDATE, COMMIT, ROLLBACK - DML (Data Manipulation Languarge)
-- DDL (Data Definition Languarge) - в отличии от первых, для создания быз данных и их структур.
-- Задачи, выполняемые с помощью DDL:
-- 1) Определение структуры новой таблицы и создания ее;
-- 2) Удалить таблицу, которая больше не нужна;
-- 3) Изменить определение существующей таблицы;
-- 4) Определить виртуальную таблицу (или представление) данных;
-- 5) Обеспечить безопасность базы данных;
-- 6) Создать индекс для ускорения доступа к таблице;
-- 7) Управлять физическим размещение данных.

--CREATE - создать 
--DROP - удалить
--ALTER - изменить

-- CREATE / DROP DATABASE - создать или удалить БД

-- Let's create a new one table for oficces and ordres and one domain
CREATE DOMAIN VALID_OFFICE_ID INTEGER
	CHECK (VALUE BETWEEN 11 AND 99);

CREATE TABLE OFFICES_1_0
	(
	OFFICE VALID_OFFICE_ID NOT NULL,
	-- OFFICE VALID_OFFICE_ID NOT NULL PRIMARY KEY,
	CITY VARCHAR(15) NOT NULL,
	-- CITY VARCHAR(15) NOT NULL UNIQUE,
	REGION VARCHAR(10) NOT NULL DEFAULT 'Eastern',
	MGR INTEGER DEFAULT 106,
	-- MGR INTEGER REFERENCES SALESREPS,
	TARGET DECIMAL (9, 2) DEFAULT NULL,
	SALES DESIMAL (9, 2) NOT NULL DEFAULT 0.00,
		PRIMARY KEY (OFFICE),
		CONSTRAINT HASMGR_1_0 FOREIGN KEY (MGR) REFERENCES SALESREPS ON DELETE SET NULL,
		CHECK (TARGET >= 0.00),
		UNIQUE (CITY)		
	);

CREATE TABLE ORDERS_1_0
	(
	ORDER_NUM INTEGER NOT NULL,
	ORDER_DATE DATE NOT NULL,
	CUST INTEGER NOT NULL,
	REP INTEGER,
	MFR CHAR(3) NOT NULL,
	PRODUCT CHAR(5) NOT NULL,
	QTY INTEGER NOT NULL,
	AMOUNT DECIMAL (9, 2) NOT NULL
		PRIMARY KEY (ORDER_NUM_1_0),
		CONSTRAINT PLACEDBY_1_0 FOREIGN KEY (CUST_1_0) REFERENCES CUSTOMERS ON DELETE CASCADE,
		CONSTRAINT TAKENBY_1_0 FOREIGN KEY (REP_1_0) REFERENCES SALESREPS ON DELETE SET NULL,
		CONSTRAINT ISFOR_1_0 FOREIGN KEY (MFR_1_0, PRODUCT_1_0) REFERENCES PRODUCTS ON DELETE RESTRICT,
	);
	
CREATE TABLE SALESREPS_1_0
            (EMPL_NUM INTEGER NOT NULL,
            NAME VARCHAR (15) NOT NULL,
            AGE INTEGER,
            REP_OFFICE integer,
            TITLE VARCHAR(10),
            HIRE_DATE DATE NOT NULL,
            MANAGER integer,
            QUOTA DECIMAL (9,2),
            SALES DECIMAL (9,2) NOT NULL,
            PRIMARY KEY (EMPL_NUM),
			CONSTRAINT MANAGER FOREIGN KEY (EMPL_NUM) REFERENCES SALESREPS
            ON DELETE SET NULL,
            CONSTRAINT WORKSIN FOREIGN KEY (REP_OFFICE) REFERENCES OFFICES(OFFICE)
            ON delete SET NULL,
			CONSTRAINT QUOTA_CAP CHECK ((HIRE_DATE < '2006-01-01' OR (QUOTA <= 300000)));
			
-- DROP TABLE table_name (.../CASCADE/RESTRICT) -->
-- DROP TABLE (OFFICES_1_0, ORDERS_1_0, SALESREPS_1_0);

-- Для последующего изменения информации в таблице после ее непосредственного создания
-- ALTER TABLE table_name (ADD opr_column ... /
--						   ALTER column_name (SET DEFAULT value / DROP DEFAULT) /
--						   DROP column_name (CASCADE / RESTRICT) /
--						   ADD (определение_первичного_ключа/внешнего_ключа//ограничение_уникальности/на_значение)/
--						   DROP CONSTRAINT имя_ограничения CASCADE/RESTRICT )

ALTER TABLE CUSTOMERS
	ADD CONTACT_NAME VARCHAR(30);
ALTER TABLE CUSTOMERS
	ADD CONTACT_PHONE CHAR(10);
ALTER TABLE PRODUCTS ADD MIN_QTY INTEGER NOT NULL DEFAULT 0;
ALTER TABLE PRODUCTS ADD COLUMN MIN_QTY INTEGER NOT NULL DEFAULT 0;
ALTER TABLE SALESREPS DROP HIRE_DATE;

ALTER TABLE OFFICES ADD CONSTRAINT INREGION FOREIGN KEY (REGION) REFERENCES REGIONS;
ALTER TABLE SALESREPS DROP CONSTRAINT WORKSIN;
ALTER TABLE OFFICES DROP PRIMARY KEY;

-- УТВЕРЖДЕНИЕ
CREATE ASSERTION CREDITLIMIT
	CHECK ((CUSTOMERS.CUST_NUM = ORDERS.CUST) AND
			(SUM(AMOUNT) <= CREDIT_LIMIT));
			
DROP ASSERTION CREDITLIMIT;

CREATE DOMAIN VALID_EMP_IDS INTEGER	
	CHECK (VALUE BETWEEN 101 AND 199);
DROP DOMAIN VALID_EMP_IDS RESTRICT; --(CASCADE)

-- ???? CHECK typeof

-- ПСЕВДОНИМЫ И СИНОНИМЫ
CREATE ALIAS REPS FOR OP_ADMIN.SALESREPS;
CREATE SYNONYM ...;
CREATE ALIAS OFFICES FOR OP_ADMIN.OFFICES;

DROP ALIAS REPS;
DROP ALIAS OFFICES;


-- INDEX
CREATE UNIQUE INDEX OFC_MGR_IDX ON OFFICES (MGR);
CREATE UNIQUE INDEX ORD_PROD_IDX ON ORDERS (MFR, PRODUCT);

DROP INDEX....;

-- Catalogs
DECLARE DATABASE FILENAME ......; 

